<Window x:Class="Texter.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Texter"
        mc:Ignorable="d"
        Title="Texter" 
        MinWidth="50"
        MaxWidth="300"
        
        Width="300"
        
        SizeToContent="Height"
        Topmost="True"
        WindowStyle="None"
        SizeChanged="Window_SizeChanged"
        AllowsTransparency="True"
        >

    <Window.Background>
        <SolidColorBrush Opacity="0" />
    </Window.Background>
    <Window.Resources>
        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="AcceptsTab" Value="True"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="MaxHeight" Value="400"/>
        </Style>

        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}" x:Key="RemoveButton">
            <Setter Property="Content" Value="X" />
            <Setter Property="Margin" Value="1" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="Width" Value="20" />
            <Setter Property="Height" Value="20" />
            <Setter Property="Visibility" Value="Collapsed" />
        </Style>
    </Window.Resources>
    
    <Border Opacity="0.2" BorderThickness="2" Background="White" BorderBrush="Black" Padding="5">
        <Border.Triggers>

            <EventTrigger RoutedEvent="Control.MouseEnter">
                <BeginStoryboard>
                    <Storyboard >
                        <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="Control.MouseLeave">
                <BeginStoryboard>
                    <Storyboard >
                        <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Border.Triggers>

        <DockPanel LastChildFill="False" >
            <Grid Margin="0,0,0,5" Name="Header" DockPanel.Dock="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                <TextBlock Text="Texter" FontWeight="Bold" VerticalAlignment="Center"/>

                <Button Content="X" Background="Red" Grid.Column="1" Height="20" Width="20" Name="CloseButton" VerticalAlignment="Center"/>
            </Grid>


            <Expander DockPanel.Dock="Top" Header="Vágólapkezelés" x:Name="ClipboardManager">
                <DockPanel >
                    <Grid DockPanel.Dock="Top">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>

                        <ContentControl Grid.ColumnSpan="2" Content="{Binding Path=GroupItems}">
                            <ContentControl.ContentTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <ComboBox x:Name="cb" ItemsSource="{Binding}"
                                                  DisplayMemberPath="Text" 
                                                  SelectedValuePath="ID" 
                                                  SelectedValue="{Binding Path=DataContext.SelectedGroupID, ElementName=ClipboardManager}"/>
                                        <TextBlock x:Name="tb" Text="Válasszon csoportot" IsHitTestVisible="False" Visibility="Hidden"/>
                                    </Grid>
                                    <DataTemplate.Triggers>
                                        <Trigger SourceName="cb" Property="SelectedItem" Value="{x:Null}">
                                            <Setter TargetName="tb" Property="Visibility" Value="Visible"/>
                                        </Trigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ContentControl.ContentTemplate>
                        </ContentControl>

                        <TextBox Grid.Row="1"
                                 Grid.Column="0"
                                 Text="{Binding Path=TextInput, UpdateSourceTrigger=PropertyChanged}" />
                        <Button Grid.Row="1" Grid.Column="1" Content=" + " Command="{Binding Path=AddTextCommand}" Margin="5,0,0,5" IsDefault="True"/>


                    </Grid>

                    <CheckBox DockPanel.Dock="Top" Margin="0,5,0,5" IsChecked="{Binding Path=KeepOnClipboardAfterInsert}" Content="Vágólapon tart" IsThreeState="False"/>

                    <ListView DockPanel.Dock="Top" 
                              ItemsSource="{Binding Path=TextItems}"
                              SelectionMode="Single" HorizontalContentAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ListView.ItemTemplate>
                            <DataTemplate >
                                <Grid x:Name="Element" Height="23">
                                    <TextBlock Text="{Binding Path=Text}" TextTrimming="CharacterEllipsis" ToolTip="{Binding Path=Text}"/>
                                    <Button Style="{StaticResource ResourceKey=RemoveButton}" x:Name="RemoveButton" 
                                            Command="{Binding Path=DataContext.RemoveItemCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListView}}}" 
                                            CommandParameter="{Binding Path=.}"
                                            />
                                </Grid>
                                <DataTemplate.Triggers>
                                    <Trigger SourceName="Element" Property="IsMouseOver" Value="True" >
                                        <Setter Property="Visibility" Value="Visible" TargetName="RemoveButton"/>
                                    </Trigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>

                    <ResizeGrip DockPanel.Dock="Bottom" HorizontalAlignment="Right" Cursor="ScrollWE" Name="ResizedGrip"/>
                </DockPanel>

            </Expander>

            <Expander DockPanel.Dock="Top" Header="Csoportkezelés">
                <DockPanel >
                    <DockPanel DockPanel.Dock="Top">
                        <Button DockPanel.Dock="Right" Content=" + " Command="{Binding Path=AddGroupCommand}" Margin="5,0,0,5" IsDefault="True"/>
                        <TextBox Text="{Binding Path=GroupInput, UpdateSourceTrigger=PropertyChanged}" />
                    </DockPanel>

                    <ListView DockPanel.Dock="Top" 
                              ItemsSource="{Binding Path=GroupItems}"
                              SelectionMode="Single" 
                              HorizontalContentAlignment="Stretch" 
                              ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ListView.ItemTemplate>
                            <DataTemplate >
                                <Grid x:Name="Element" Height="23">
                                    <TextBlock Text="{Binding Path=Text}" TextTrimming="CharacterEllipsis" ToolTip="{Binding Path=Text}"/>
                                    <Button Style="{StaticResource ResourceKey=RemoveButton}" x:Name="RemoveGroupButton" 
                                            Command="{Binding Path=DataContext.RemoveGroupItemCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListView}}}" 
                                            CommandParameter="{Binding Path=.}"
                                            />
                                </Grid>
                                <DataTemplate.Triggers>
                                    <Trigger SourceName="Element" Property="IsMouseOver" Value="True" >
                                        <Setter Property="Visibility" Value="Visible" TargetName="RemoveGroupButton"/>
                                    </Trigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>

                </DockPanel>
            </Expander>
        </DockPanel>

    </Border>

</Window>
